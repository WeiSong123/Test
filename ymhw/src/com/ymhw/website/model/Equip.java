package com.ymhw.website.model;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.jfinal.kit.StrKit;
import com.jfinal.plugin.activerecord.Page;
import com.ymhw.website.model.base.BaseEquip;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Equip extends BaseEquip<Equip> {
	public static final Equip dao = new Equip();
	
	public List<Equip> getEquipByLeader(int userId){
		return dao.find("select * from equip where isValid = 1 and uploader = ? order by uploadTime desc", userId);
	}
	
	public Equip queryInvalidEquip(int equipId)
	{
		return dao.findFirst("select * from equip where isValid = 1 and id = ?", equipId);
	}
	
	public Equip queryCheckedEquip(int equipId)
	{
		return dao.findFirst("select * from equip where isValid = 1 and checkStatus = 3 and id = ?", equipId);
	}
	/**
	 * 待审核装备列表
	 * @return
	 */
	public List<Equip> queryCheckEuiplist()
	{
		return dao.find("select a.id,a.name,a.uploadTime,a.checkStatus,a.checkMsg,b.name as uploaderName from equip a, user b where a.isValid = 1 and a.checkStatus = 1 and a.uploader = b.id order by a.id DESC");
	}
	
	/**
	 * 根据num 查询审核过的装备列表    num为0时查询所有装备
	 * @param num
	 * @return
	 */
	public List<Equip> queryValidEquips(int num)
	{
		if (num == 0)
		{
			return dao.find("select * from equip where isValid = 1 and checkStatus = 3 order by uploadTime desc");
		}
		else
		{
			return dao.find("select * from equip where isValid = 1 and checkStatus = 3 order by uploadTime desc limit ?", num);
		}
	}
	
	public List<Equip> queryByCondition(String types) {
		if (!StrKit.isBlank(types)) {
			types = types.substring(0, types.length());
		}
		List<Equip> equips = new ArrayList<Equip>();
		//选择了全部，最多显示20条装备记录
		if (types.contains("0")) {
			equips = dao.find("select * from equip where isValid = 1 and checkStatus = 3 order by uploadTime desc limit 50");
		} else {
			String[] typeArr = types.split(",");
			for (String t : typeArr) {
				String sql = "select * from equip where isValid = 1 and checkStatus = 3 AND types LIKE ? order by uploadTime desc";
				Object [] para = new Object[]{"%" + t + "%"};
				
				List<Equip> list = dao.find(sql, para);
				equips.addAll(list);
			}
		}
		return equips;
	}

	public Page<Equip> paginateByCondition(int pageNumber, int pageSize, Map<String, Object> param) {
		String keyword = (String) param.get("keyword");
		String sql = "";
		if (StrKit.isBlank(keyword)) {
			sql = "select e.*,u.account from equip e, `user` u where e.isValid = 1 and e.uploader = u.id order by e.uploadTime desc";
			return Equip.dao.paginate(pageNumber, pageSize, sql);
		} else {
			sql = "select e.*,u.account from equip e, `user` u where e.isValid = 1 and e.name like ? and e.uploader = u.id order by e.uploadTime desc";
			return Equip.dao.paginate(pageNumber, pageSize, sql, "%" + keyword + "%");
		}
		
	}
	
	
}
